<filter kubernetes.journal.container**>
  type record_transformer
  enable_ruby
  <record>
    hostname ${(kubernetes_host rescue nil) || File.open('/etc/docker-hostname') { |f| f.readline }.rstrip}
    # log is set if MESSAGE is JSON valued and has err or msg field
    message ${record['MESSAGE'] || log}
    version 1.3.0
    time ${Time.at((record["_SOURCE_REALTIME_TIMESTAMP"] || record["__REALTIME_TIMESTAMP"]).to_f / 1000000.0).to_datetime.rfc3339(6)}
  </record>
  # revisit this list when we can handle all of the other journal metadata
  # we have to use remove_keys - we can't use renew_record + keep_keys because the
  # k8s meta plugin adds the labels with dynamic names, and we can't keep_keys with wildcards/patterns
  remove_keys log,stream,MESSAGE,_SOURCE_REALTIME_TIMESTAMP,__REALTIME_TIMESTAMP,CONTAINER_ID,CONTAINER_ID_FULL,CONTAINER_NAME,PRIORITY,_BOOT_ID,_CAP_EFFECTIVE,_CMDLINE,_COMM,_EXE,_GID,_HOSTNAME,_MACHINE_ID,_PID,_SELINUX_CONTEXT,_SYSTEMD_CGROUP,_SYSTEMD_SLICE,_SYSTEMD_UNIT,_TRANSPORT,_UID
</filter>

# <filter **logme>
#   @type stdout
# </filter>

<filter kubernetes.var.log.containers**>
  type record_transformer
  enable_ruby
  <record>
    hostname ${(kubernetes_host rescue nil) || File.open('/etc/docker-hostname') { |f| f.readline }.rstrip}
    message ${(message rescue nil) || log}
    version 1.2.0
  </record>
  remove_keys log,stream
</filter>
