apiVersion: "v1"
kind: "Template"
metadata:
  name: logging-fluentd-template-maker
  annotations:
    description: "Template to create template for fluentd"
    tags: "infrastructure"
objects:
- apiVersion: "v1"
  kind: "Template"
  metadata:
    name: logging-fluentd-template
    annotations:
      description: "Template for logging fluentd deployment."
      tags: "infrastructure"
    labels:
      logging-infra: fluentd-dc
  labels:
    logging-infra: fluentd-dc
    provider: openshift
    component: fluentd-dc
  parameters:
  -
    description: "The image prefix for the Fluentd image to use"
    name: IMAGE_PREFIX
    value: ${IMAGE_PREFIX_DEFAULT}
  -
    description: 'The image version for the Fluentd image to use'
    name: IMAGE_VERSION
    value: ${IMAGE_VERSION_DEFAULT}
  objects:
  -
    apiVersion: v1
    kind: "DeploymentConfig"
    metadata:
      name: "logging-fluentd-dc"
      labels:
        provider: openshift
        component: "fluentd-dc"
    spec:
      replicas: 0
      selector:
        provider: openshift
        component: "fluentd-dc"
      triggers:
      - type: ConfigChange
      strategy:
        resources: {}
        rollingParams:
          intervalSeconds: 1
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Recreate
      template:
        metadata:
          name: fluentd-elasticsearch
          labels:
            provider: openshift
            component: "fluentd-dc"
        spec:
          serviceAccount: aggregated-logging-fluentd
          serviceAccountName: aggregated-logging-fluentd
          containers:
          - name: fluentd-elasticsearch
            image: ${IMAGE_PREFIX}logging-fluentd:${IMAGE_VERSION}
            imagePullPolicy: IfNotPresent
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /run/log/journal
              name: runlogjournal
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: certs
              mountPath: /etc/fluent/keys
              readOnly: true
            - name: dockerhostname
              mountPath: /etc/docker-hostname
              readOnly: true
            - name: muxcerts
              mountPath: /etc/fluent/muxkeys
              readOnly: true
            - mountPath: /var/lib/fluentd
              name: filebufferstorage
            env:
            - name: "K8S_HOST_URL"
              value: ${MASTER_URL}
            - name: "ES_HOST"
              value: ${ES_HOST}
            - name: "ES_PORT"
              value: ${ES_PORT}
            - name: "ES_CLIENT_CERT"
              value: ${ES_CLIENT_CERT}
            - name: "ES_CLIENT_KEY"
              value: ${ES_CLIENT_KEY}
            - name: "ES_CA"
              value: ${ES_CA}
            - name: "OPS_HOST"
              value: ${OPS_HOST}
            - name: "OPS_PORT"
              value: ${OPS_PORT}
            - name: "OPS_CLIENT_CERT"
              value: ${OPS_CLIENT_CERT}
            - name: "OPS_CLIENT_KEY"
              value: ${OPS_CLIENT_KEY}
            - name: "OPS_CA"
              value: ${OPS_CA}
            - name: JSON_FILE_POS_FILE
              value: "/var/tmp/json.pos"
            - name: JOURNAL_POS_FILE
              value: "/var/tmp/journal.pos"
            - name: MUX_CLIENT_MODE
              value: "maximal"
          volumes:
          - hostPath:
              path: /run/log/journal
            name: runlogjournal
          - name: varlog
            hostPath:
              path: /var/log
          - name: varlibdockercontainers
            hostPath:
              path: /var/lib/docker/containers
          - name: certs
            secret:
              secretName: logging-fluentd
          - name: dockerhostname
            hostPath:
              path: /etc/hostname
          - name: muxcerts
            secret:
              secretName: logging-mux
          - emptyDir: {}
            name: filebufferstorage
parameters:
-
  description: "Internal url for reaching the master API to query pod labels"
  name: MASTER_URL
  value: "https://kubernetes.default.svc.cluster.local"
-
  description: "Hostname (or IP) for reaching Elasticsearch to write logs"
  name: ES_HOST
  value: "logging-es"
-
  description: "Port number for reaching Elasticsearch to write logs"
  name: ES_PORT
  value: "9200"
-
  description: "Location of client certificate for authenticating to Elasticsearch to write logs"
  name: ES_CLIENT_CERT
  value: "/etc/fluent/keys/cert"
-
  description: "Location of client key for authenticating to Elasticsearch to write logs"
  name: ES_CLIENT_KEY
  value: "/etc/fluent/keys/key"
-
  description: "Location of CA cert for validating connectiong to Elasticsearch to write logs"
  name: ES_CA
  value: "/etc/fluent/keys/ca"
-
  description: "Hostname (or IP) for reaching Elasticsearch to write cluster logs"
  name: OPS_HOST
  value: "logging-es"
-
  description: "Port number for reaching Elasticsearch to write cluster logs"
  name: OPS_PORT
  value: "9200"
-
  description: "Location of client certificate for authenticating to Elasticsearch to write cluster logs"
  name: OPS_CLIENT_CERT
  value: "/etc/fluent/keys/cert"
-
  description: "Location of client key for authenticating to Elasticsearch to write cluster logs"
  name: OPS_CLIENT_KEY
  value: "/etc/fluent/keys/key"
-
  description: "Location of CA cert for validating connectiong to Elasticsearch to write cluster logs"
  name: OPS_CA
  value: "/etc/fluent/keys/ca"
-
  description: "The prefix of the image to use."
  name: IMAGE_PREFIX_DEFAULT
  value: "openshift/origin-"
-
  description: 'Specify version for logging components; e.g. for "registry.access.redhat.com/openshift3/ose-logging-deployment:3.2.0", set version "3.2.0"'
  name: IMAGE_VERSION_DEFAULT
  value: "latest"
